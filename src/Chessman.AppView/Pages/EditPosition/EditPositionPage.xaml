<Page
    x:Class="Chessman.View.EditPositionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding EditPositionViewModel, Source={StaticResource ViewModelLocator}}"
    xmlns:view="using:Chessman.View"
    xmlns:my="using:Chessman"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    SizeChanged="PageSizeChanged"
    RequestedTheme="Light">

    <Page.Resources>
        <my:SideColor x:Key="SideColorValueWhite">White</my:SideColor>
        <my:SideColor x:Key="SideColorValueBlack">Black</my:SideColor>
    </Page.Resources>

    <Grid Background="{StaticResource AccentBrush300}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="titlePanel" Style="{StaticResource PageTitlePanelStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="Board editor"
                Style="{StaticResource HeaderTextStyle}" />
            <CommandBar x:Name="topCommandBar" Grid.Column="2" Background="Transparent">
                <AppBarButton Label="Rotate" Icon="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
                <AppBarButton Label="Clear" Icon="Delete" Command="{Binding ClearCommand}"/>
                <AppBarButton Label="Done" Icon="Accept" Foreground="Green">
                    <AppBarButton.Flyout>
                        <Flyout Placement="Top">
                            <Grid>
                                <StackPanel 
                                Orientation="Horizontal"
                                Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Button Style="{StaticResource SymbolIconButton}" Command="{Binding AnalyseCommand}">
                                        <StackPanel>
                                            <SymbolIcon Symbol="Find" />
                                            <TextBlock Text="Analyze" Style="{StaticResource SymbolIconButtonLabel}"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Style="{StaticResource SymbolIconButton}" Command="{Binding PracticeCommand}">
                                        <StackPanel>
                                            <ContentControl Template="{StaticResource ComputerIconTemplate}" />
                                            <TextBlock Text="Practice" Style="{StaticResource SymbolIconButtonLabel}"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>

                                <TextBlock 
                                Foreground="Red"
                                HorizontalAlignment="Center"
                                Padding="10 8"
                                Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource InvertedConversionType}}" >
                                The position is invalid.
                                </TextBlock>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar>
        </Grid>
        <Grid x:Name="contentGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <RelativePanel>
                <view:ChessBoardView x:Name="chessBoard"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     DataContext="{Binding BoardViewModel}" />
                <Grid x:Name="optionsPanel" 
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <view:PiecesPaletteView x:Name="piecesPalette"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            DataContext="{Binding PiecesPaletteViewModel}" />
                    <StackPanel x:Name="detailsPanel" 
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                        <TextBlock Text="To move" Style="{StaticResource LabelTextStyle}"/>
                        <StackPanel Orientation="Horizontal" Margin="0 4 0 8">
                            <RadioButton Content="White" IsChecked="{Binding IsWhiteToMove, Mode=TwoWay, Converter={StaticResource ValueToRadioButtonConverter}, ConverterParameter={StaticResource TrueValue}}"/>
                            <RadioButton Content="Black" IsChecked="{Binding IsWhiteToMove, Mode=TwoWay, Converter={StaticResource ValueToRadioButtonConverter}, ConverterParameter={StaticResource FalseValue}}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </RelativePanel>
            <view:BannerAd x:Name="adBanner"
                    Grid.Column="1"
                    VerticalAlignment="Top"
                    AdUnitId="test" />
        </Grid>

        <CommandBar x:Name="bottomCommandBar" Grid.Row="2" Background="{StaticResource AccentBrush400}">
            <AppBarButton Label="Rotate" Icon="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
            <AppBarButton Label="Clear" Icon="Delete" Command="{Binding ClearCommand}"/>
            <AppBarButton Label="Done" Icon="Accept" Foreground="Green">
                <AppBarButton.Flyout>
                    <Flyout Placement="Top">
                        <Grid>
                            <StackPanel 
                                Orientation="Horizontal"
                                Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Button Style="{StaticResource SymbolIconButton}" Command="{Binding AnalyseCommand}">
                                    <StackPanel>
                                        <SymbolIcon Symbol="Find" />
                                        <TextBlock Text="Analyze" Style="{StaticResource SymbolIconButtonLabel}"/>
                                    </StackPanel>
                                </Button>
                                <Button Style="{StaticResource SymbolIconButton}" Command="{Binding PracticeCommand}">
                                    <StackPanel>
                                        <ContentControl Template="{StaticResource ComputerIconTemplate}" />
                                        <TextBlock Text="Practice" Style="{StaticResource SymbolIconButtonLabel}"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>

                            <TextBlock 
                                Foreground="Red"
                                HorizontalAlignment="Center"
                                Padding="10 8"
                                Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource InvertedConversionType}}" >
                                The position is invalid.
                            </TextBlock>
                        </Grid>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="bottomCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="topCommandBar.Visibility" Value="Visible"/>
                        
                        <Setter Target="contentGrid.Margin" Value="12 8 12 12"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.Margin" Value="0 0 24 0"/>

                        <Setter Target="optionsPanel.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="optionsPanel.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="optionsPanel.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="optionsPanel.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="optionsPanel.MinWidth" Value="150"/>

                        <Setter Target="detailsPanel.Margin" Value="0 12 0 0"/>

                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="bottomCommandBar.Visibility" Value="Visible"/>
                        <Setter Target="topCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="titlePanel.Margin" Value="48 0 0 0"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>

                        <Setter Target="optionsPanel.(RelativePanel.Below)" Value="chessBoard"/>
                        <Setter Target="optionsPanel.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="optionsPanel.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.Orientation" Value="Horizontal"/>
                        <Setter Target="optionsPanel.MinHeight" Value="180"/>

                        <Setter Target="adBanner.Visibility" Value="Collapsed"/>
                        <Setter Target="adBanner.Width" Value="0"/>
                        
                        <Setter Target="detailsPanel.Margin" Value="4"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>
