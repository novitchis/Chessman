<Page
    x:Class="Chessman.View.TacticsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Chessman"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="using:Chessman.View"
    mc:Ignorable="d"
    DataContext="{Binding TacticsViewModel, Source={StaticResource ViewModelLocator}}">
    <Grid x:Name="mainGrid"
          Background="{StaticResource AccentBrush300}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="titlePanel" Style="{StaticResource PageTitlePanelStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="Tactics (Beta)"
                Style="{StaticResource HeaderTextStyle}" />
            <CommandBar x:Name="topCommandBar"
                    Grid.Column="2" 
                    Background="Transparent">
                <AppBarButton Label="Back" Icon="Back" ToolTipService.ToolTip="Back" Command="{Binding GoBackCommand}"/>
                <AppBarButton Label="Forward" Icon="Forward" ToolTipService.ToolTip="Forward" Command="{Binding GoForwardCommand}"/>
                <AppBarSeparator />
                <AppBarButton
                    IsEnabled="{Binding TacticState, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=InProgress}"
                    Label="Show Move" 
                    ToolTipService.ToolTip="Show Move" 
                    Command="{Binding ExecuteNextMoveCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82F;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Restart" ToolTipService.ToolTip="Restart" Command="{Binding RestartCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEDAB;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Next Tactic" ToolTipService.ToolTip="Next Tactic" Command="{Binding SkipCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE974;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarSeparator />
                <AppBarButton Label="Analyze game" Icon="Find"  Command="{Binding AnalyseGameCommand}" ToolTipService.ToolTip="Analyze"/>
                <AppBarButton Label="Continue vs computer" ToolTipService.ToolTip="Continue vs computer" Command="{Binding PracticePositionCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7F4;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar>
        </Grid>
        <Grid x:Name="contentGrid" Grid.Row="1">
            <RelativePanel>
                <view:TacticDetailsView x:Name="tacticDetailsView"
                                        DataContext="{Binding TacticDetailsViewModel}"/>
                <view:NotationView x:Name="notationView" 
                    Grid.Row="1"
                    DataContext="{Binding NotationViewModel}" />
                <view:ChessBoardView x:Name="chessBoard"
                                    HasDragAndDrop="True"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                     DataContext="{Binding BoardViewModel}"
                                     />
            </RelativePanel>
        </Grid>
        <CommandBar x:Name="bottomCommandBar"
                    Grid.Row="2" 
                    Background="{StaticResource AccentBrush400}"
                    Closed="OnCommandBarClosed">
            <AppBarButton Label="Back" Icon="Back" ToolTipService.ToolTip="Back" Command="{Binding GoBackCommand}"/>
            <AppBarButton Label="Forward" Icon="Forward" ToolTipService.ToolTip="Forward" Command="{Binding GoForwardCommand}"/>
            <AppBarButton
                    IsEnabled="{Binding TacticState, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=InProgress}"
                    Label="Show Move" 
                    ToolTipService.ToolTip="Show Move" 
                    Command="{Binding ExecuteNextMoveCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82F;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Restart" ToolTipService.ToolTip="Restart" Command="{Binding RestartCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEDAB;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Next Tactic" ToolTipService.ToolTip="Next Tactic" Command="{Binding SkipCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE974;"/>
                    </AppBarButton.Icon>
                </AppBarButton>

            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Analyze game" Icon="Find"  Command="{Binding AnalyseGameCommand}" ToolTipService.ToolTip="Analyze"/>
                <AppBarButton Label="Continue vs computer" ToolTipService.ToolTip="Continue vs computer" Command="{Binding PracticePositionCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7F4;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="bottomCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="topCommandBar.Visibility" Value="Visible"/>

                        <Setter Target="contentGrid.Margin" Value="12 8 12 12"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.Margin" Value="0 0 12 0"/>

                        <Setter Target="tacticDetailsView.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="tacticDetailsView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="tacticDetailsView.MinWidth" Value="250"/>

                        <Setter Target="notationView.(RelativePanel.Below)" Value="tacticDetailsView"/>
                        <Setter Target="notationView.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.MinWidth" Value="250"/>
                        <Setter Target="notationView.Margin" Value="0 4 0 0"/>

                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="bottomCommandBar.Visibility" Value="Visible"/>
                        <Setter Target="topCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="titlePanel.Visibility" Value="Collapsed"/>

                        <Setter Target="tacticDetailsView.Margin" Value="48 0 0 0"/>
                        <Setter Target="tacticDetailsView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="tacticDetailsView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="tacticDetailsView.(RelativePanel.AlignTopWithPanel)" Value="true"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.Below)" Value="tacticDetailsView"/>

                        <Setter Target="notationView.(RelativePanel.Below)" Value="chessBoard"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.MinHeight" Value="100"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
