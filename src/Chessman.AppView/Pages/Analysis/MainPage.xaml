<Page
    x:Class="Chessman.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Chessman"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="using:Chessman.View"
    xmlns:controls="using:Chessman.Controls"
    mc:Ignorable="d"
    DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
    d:DesignHeight="1080"
    d:DesignWidth="612" 
    RequestedTheme="Light"
    SizeChanged="PageSizeChanged">
    
    <Grid x:Name="mainGrid"
          Background="{StaticResource AccentBrush300}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="titlePanel" Style="{StaticResource PageTitlePanelStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="Analysis"
                Style="{StaticResource HeaderTextStyle}" />
            <CommandBar x:Name="topCommandBar"
                    Grid.Column="2" 
                    Background="Transparent"
                    Closed="OnCommandBarClosed">
                <AppBarButton Label="Rotate" Icon="Rotate" ToolTipService.ToolTip="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
                <AppBarButton Label="Back" Icon="Back" ToolTipService.ToolTip="Back" Command="{Binding GoBackCommand}"/>
                <AppBarButton Label="Forward" Icon="Forward" ToolTipService.ToolTip="Forward" Command="{Binding GoForwardCommand}"/>
                <AppBarSeparator />
                <AppBarButton Label="New game" ToolTipService.ToolTip="New game" Command="{Binding NewGameCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xECC9;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Edit position" Icon="Edit" ToolTipService.ToolTip="Edit position" Command="{Binding EditPositionCommand}" />
                <AppBarButton Label="Continue vs computer" ToolTipService.ToolTip="Continue vs computer" Command="{Binding PracticePositionCommand}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7F4;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarSeparator />
                <AppBarButton Label="Load file" Icon="OpenFile" ToolTipService.ToolTip="Load file" Command="{Binding LoadPGNCommand}"/>
                <AppBarButton Label="Load from clipboard" Icon="Paste" ToolTipService.ToolTip="Load from clipboard" Command="{Binding LoadFromClipboardCommand}" />
                <AppBarButton Label="Save file" Icon="Save" ToolTipService.ToolTip="Save file" Command="{Binding SavePGNCommand}"/>
                
                <CommandBar.SecondaryCommands>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>
        <Grid Margin="4" Grid.Row="1" x:Name="contentGrid">
            <RelativePanel>
                <view:CompactAnalysisHeader x:Name="compactAnalysisHeader" 
                                    DataContext="{Binding AnalysisViewModel}"/>
                <view:AnalysisView x:Name="analysisView"
                                   DataContext="{Binding AnalysisViewModel}" />
                <view:NotationView x:Name="notationView"
                                   DataContext="{Binding NotationViewModel}" />
                <Grid x:Name="chessBoardPanel">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <view:ChessBoardView x:Name="chessBoard"
                                         HasDragAndDrop="True"
                                         DataContext="{Binding BoardViewModel}"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         SizeChanged="BoardSizeChanged"/>
                    <Grid x:Name="evaluationBarPanel" Grid.Column="1">
                        <controls:EvaluationBar x:Name="evaluationBar" 
                                                Perspective="{Binding BoardViewModel.Perspective}"
                                                Evaluation="{Binding AnalysisViewModel.AnalysisLines[0].Evaluation}"
                                                Visibility="{Binding AnalysisViewModel.IsActive, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>
                    </Grid>
                </Grid>

            </RelativePanel>
        </Grid>
        <CommandBar x:Name="bottomCommandBar"
                    Grid.Row="2" 
                    Background="{StaticResource AccentBrush400}"
                    Closed="OnCommandBarClosed">
            <AppBarButton Label="Rotate" Icon="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
            <AppBarButton Label="Back" Icon="Back" Command="{Binding GoBackCommand}"/>
            <AppBarButton Label="Forward" Icon="Forward" Command="{Binding GoForwardCommand}"/>

            <CommandBar.SecondaryCommands>
                <AppBarButton Label="New game" Command="{Binding NewGameCommand}" />
                <AppBarButton Label="Edit position" Command="{Binding EditPositionCommand}" />
                <AppBarButton Label="Continue vs computer" Command="{Binding PracticePositionCommand}" />
                <AppBarSeparator />
                <AppBarButton Label="Load file" Icon="OpenFile" Command="{Binding LoadPGNCommand}"/>
                <AppBarButton Label="Load from clipboard" Command="{Binding LoadFromClipboardCommand}" />
                <AppBarSeparator />
                <AppBarButton Label="Save file" Icon="Save" Command="{Binding SavePGNCommand}"/>

            </CommandBar.SecondaryCommands>
        </CommandBar>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="bottomCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="topCommandBar.Visibility" Value="Visible"/>

                        <Setter Target="contentGrid.Margin" Value="12 8 12 12"/>

                        <Setter Target="chessBoardPanel.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="chessBoardPanel.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoardPanel.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoardPanel.Margin" Value="0 0 12 0"/>


                        <Setter Target="compactAnalysisHeader.(RelativePanel.RightOf)" Value="chessBoardPanel"/>
                        <Setter Target="compactAnalysisHeader.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="compactAnalysisHeader.MinWidth" Value="250"/>

                        <Setter Target="analysisView.(RelativePanel.RightOf)" Value="chessBoardPanel"/>
                        <Setter Target="analysisView.(RelativePanel.Below)" Value="compactAnalysisHeader"/>
                        <Setter Target="analysisView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="analysisView.MinWidth" Value="250"/>

                        <Setter Target="notationView.(RelativePanel.RightOf)" Value="chessBoardPanel"/>
                        <Setter Target="notationView.(RelativePanel.Below)" Value="analysisView"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.Margin" Value="0 4 0 0"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentGrid.Margin" Value="0"/>
                        <Setter Target="titlePanel.Visibility" Value="Collapsed"/>
                        <Setter Target="bottomCommandBar.Visibility" Value="Visible"/>
                        <Setter Target="topCommandBar.Visibility" Value="Collapsed"/>

                        <Setter Target="compactAnalysisHeader.Margin" Value="48 0 0 0"/>
                        <Setter Target="compactAnalysisHeader.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="compactAnalysisHeader.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="compactAnalysisHeader.(RelativePanel.AlignTopWithPanel)" Value="true"/>

                        <Setter Target="analysisView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="analysisView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="analysisView.(RelativePanel.Below)" Value="compactAnalysisHeader"/>

                        <Setter Target="chessBoardPanel.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoardPanel.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="chessBoardPanel.(RelativePanel.Below)" Value="analysisView"/>

                        <Setter Target="evaluationBarPanel.Visibility" Value="Collapsed"/>

                        <Setter Target="notationView.(RelativePanel.Below)" Value="chessBoardPanel"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.MinHeight" Value="100"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>
