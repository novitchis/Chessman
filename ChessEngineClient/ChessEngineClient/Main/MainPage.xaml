<Page
    x:Class="ChessEngineClient.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ChessEngineClient"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="using:ChessEngineClient.View"
    mc:Ignorable="d"
    DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
    d:DesignHeight="1080"
    d:DesignWidth="612" 
    RequestedTheme="Light"
    SizeChanged="PageSizeChanged">

    <Grid x:Name="mainGrid"
          Background="{StaticResource AccentBrush300}">
        <Grid Margin="4" x:Name="contentGrid">
            <RelativePanel>
                <view:AnalysisView x:Name="analysisView"
                                DataContext="{Binding AnalysisViewModel}"
                                Height="48" />
                
                <view:NotationView x:Name="notationView"
                                   DataContext="{Binding NotationViewModel}" />
                <view:ChessBoardView x:Name="chessBoard"
                                     HasDragAndDrop="True"
                                     DataContext="{Binding BoardViewModel}"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center" />
            </RelativePanel>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentGrid.Margin" Value="12"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.Margin" Value="0 0 12 0"/>

                        <Setter Target="analysisView.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="analysisView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="analysisView.MinWidth" Value="250"/>

                        <Setter Target="notationView.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="notationView.(RelativePanel.Below)" Value="analysisView"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.Margin" Value="0 4 0 0"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentGrid.Margin" Value="0"/>

                        <Setter Target="analysisView.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="analysisView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="analysisView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="analysisView.Margin" Value="48 0 0 0"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.Below)" Value="analysisView"/>

                        <Setter Target="notationView.(RelativePanel.Below)" Value="chessBoard"/>
                        <Setter Target="notationView.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="notationView.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="notationView.MinHeight" Value="100"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar x:Name="CommandBar" Grid.Row="1" Background="{StaticResource AccentBrush400}">
            <AppBarButton Label="Rotate" Icon="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
            <AppBarButton Label="Back" Icon="Back" Command="{Binding GoBackCommand}"/>
            <AppBarButton Label="Forward" Icon="Forward" Command="{Binding GoForwardCommand}"/>

            <CommandBar.SecondaryCommands>
                <AppBarButton Label="New game" Command="{Binding NewGameCommand}" />
                <AppBarButton Label="Edit position" Command="{Binding EditPositionCommand}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
