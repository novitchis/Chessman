<Page
    x:Class="ChessEngineClient.View.EditPositionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding EditPositionViewModel, Source={StaticResource ViewModelLocator}}"
    xmlns:view="using:ChessEngineClient.View"
    xmlns:my="using:ChessEngineClient"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    SizeChanged="PageSizeChanged"
    RequestedTheme="Light">

    <Page.Resources>
        <my:SideColor x:Key="SideColorValueWhite">White</my:SideColor>
        <my:SideColor x:Key="SideColorValueBlack">Black</my:SideColor>
    </Page.Resources>

    <Grid Background="{StaticResource AccentBrush300}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="titlePanel" Style="{StaticResource PageTitlePanelStyle}">
            <TextBlock 
                Text="Board editor"
                Style="{StaticResource HeaderTextStyle}" />
        </Grid>
        <Grid x:Name="contentGrid" Grid.Row="1">
            <RelativePanel>
                <view:ChessBoardView x:Name="chessBoard"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     DataContext="{Binding BoardViewModel}" />
                <view:PiecesPaletteView x:Name="piecesPalette"
                                        Background="Red"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        DataContext="{Binding PiecesPaletteViewModel}" />
            </RelativePanel>
        </Grid>

        <CommandBar x:Name="CommandBar" Grid.Row="2" Background="{StaticResource AccentBrush400}">
            <AppBarButton Label="Rotate" Icon="Rotate" Command="{Binding BoardViewModel.TogglePerspectiveCommand}"/>
            <AppBarButton Label="Clear" Icon="Delete" Command="{Binding ClearCommand}"/>
            <AppBarButton Label="Done" Icon="Accept" Foreground="Green">
                <AppBarButton.Flyout>
                    <Flyout Placement="Top">
                        <StackPanel>
                            <StackPanel>
                                <TextBlock Text="To move:"/>
                                <StackPanel Orientation="Horizontal" Margin="0 10 0 20">
                                    <RadioButton Content="White" IsChecked="{Binding IsWhiteToMove, Mode=TwoWay}"/>
                                    <RadioButton Content="Black" IsChecked="{Binding IsWhiteToMove, Mode=TwoWay, Converter={StaticResource BoolInverterConverter}}"/>
                                </StackPanel>
                                <Button
                                    HorizontalAlignment="Center"
                                    Command="{Binding SaveCommand}"
                                    Padding="10 8"
                                    Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Content="Save"/>
                                <TextBlock 
                                    Foreground="Red"
                                    HorizontalAlignment="Center"
                                    Padding="10 8"
                                    Visibility="{Binding IsBoardValid, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource InvertedConversionType}}" >
                                    The position is invalid.
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentGrid.Margin" Value="12 8 12 12"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.Margin" Value="0 0 12 0"/>

                        <Setter Target="piecesPalette.(RelativePanel.RightOf)" Value="chessBoard"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.MinWidth" Value="150"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="titlePanel.Margin" Value="48 0 0 0"/>

                        <Setter Target="chessBoard.(RelativePanel.AlignTopWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="chessBoard.(RelativePanel.AlignLeftWithPanel)" Value="true"/>

                        <Setter Target="piecesPalette.(RelativePanel.Below)" Value="chessBoard"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignRightWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignLeftWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.(RelativePanel.AlignBottomWithPanel)" Value="true"/>
                        <Setter Target="piecesPalette.Orientation" Value="Horizontal"/>
                        <Setter Target="piecesPalette.MinHeight" Value="100"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>
